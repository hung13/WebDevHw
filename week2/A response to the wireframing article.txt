A response to "Five Important Considerations for Wireframing" by Lissa Aguilar

A UX architect's most important skill is beyond problem solving; it is communicating - the ability to clearly articulate between clients, developers, and managers to ensure smooth and efficient work-flow.  I am surprised to find out that UX stresses more on communication and teamwork than UI.  I have never had a clear distinction between the two fields; though I am not sure if I completely comprehend the differences and similarities.  Aguilar describes UX architects as information gatherers and client-developer mediators to effectively achieve customer satisfaction but the author does not stress about programming (which I now assume is the job of UI developers).  Wireframing seems to be the only non-interpersonal skill of UX.  So is that the distinction between UI and UX?  A quick search on Google shows UX is more involved in the analytical and technical side to optimize users' experiences with companies.  UI is similar to graphic design, implementing designs to complement the presentation and interactivity of products.  Would it be easier to describe UX as engineering while UI as art?  Or would that impose too stark a difference between the two closely related fields of UX and UI? 

But I digress.  The considerations and solutions Aguilar has suggested, I think, are very typical to most jobs requiring problem solving and client interactions: fully understand the problem and frequently communicate with clients and teams to formulate an acceptable solution.  Aguilar has recast tried-and-true workplace solutions for her own article.  But this is by no means a bad thing.  In doing so, I believe Aguilar has shown wireframing, which may be new and interesting and terrifying to novice web developers, is just a regular problem that can be easily solved using regular solutions.  